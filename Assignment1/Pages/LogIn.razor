@page "/login"
@using Assignment1.Auth
@namespace LoginComponent

@inject AuthenticationStateProvider AuthenticationStateProvider;
@inject NavigationManager NavigationManager;

<h1 xmlns="http://www.w3.org/1999/html">Welcome back!</h1>
<AuthorizeView Policy="MustBeLoggedIn">
    <NotAuthorized>
        <div class="formBlock">
        <form @onsubmit="@PerformLogIn">
            <label>Username:<input type="text" @bind-value="Username"/></label>
            <br/>
            <label>Password:<input type="password" @bind-value="Password"/></label>
            <br/>
            <button type="submit" class="btn btn-success">Log in</button>
            <p style="color: red; display: inline" class="pl-2">@ErrorMessage</p>
        </form>
        </div>
    </NotAuthorized>
    <Authorized>
        <button @onclick="PerformLogOut" class="btn btn-success">Log out</button>
    </Authorized>
</AuthorizeView>

@code {
    private string Username;
    private string Password;
    private string ErrorMessage;

    public async Task PerformLogIn()
    {
        ErrorMessage = "";
        
        try
        {
            ((CustomAuthenticationStateProvider) AuthenticationStateProvider).ValidateLogin(Username, Password);
            NavigationManager.NavigateTo("/");
            Username = "";
            Password = "";
        }
        catch (Exception e)
        {
            ErrorMessage = e.Message;
        }
    }

    public async Task PerformLogOut()
    {
        ErrorMessage = "";
        Username = "";
        Password = "";
        try
        {
            ((CustomAuthenticationStateProvider) AuthenticationStateProvider).Logout();
            NavigationManager.NavigateTo("/");
        }
        catch (Exception e)
        {
        }
    }

}